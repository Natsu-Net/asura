name: Crawling and Updating Database

permissions:
  actions: write
  contents: read

jobs:
  pre_job:
    # continue-on-error: true # Uncomment once integration is finished
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          concurrent_skipping: 'always'
  crawling:
    needs: pre_job    
    runs-on: "ubuntu-latest"

    steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.TOKEN }}
            ref: ${{ github.head_ref }}
        - name: Setup Deno
          uses: denoland/setup-deno@v1
          with:
            deno-version: v1.x

        - name: build Database
          env:
            MONGO_URI : ${{ secrets.MONGO_URI }}
          run: deno run -A --unstable build-database.ts
          # print current dir for debugging
        - run: pwd

        - name: Check for modified files
          id: git-check
          run: echo ::set-output name=modified::$(if [ -n "$(git status --porcelain)" ]; then echo "true"; else echo "false"; fi)

       #upload the new manga.json file to the repo
        - name: Commit files
          if: steps.git-check.outputs.modified == 'true'
          run: |
            date > date.txt
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add -A
            git commit -m "Update manga.json" && git push
